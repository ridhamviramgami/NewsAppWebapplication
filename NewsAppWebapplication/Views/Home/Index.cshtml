<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Informia</title>
    <link rel="icon" type="image/x-icon" href="https://logo-suggestion.renderforest.com/suggestions-images/9d34/3b07/9d343b07857fdcfedd539820ce4630f4.png">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <style>
        .custom-card {
            transition: transform 0.3s, box-shadow 0.3s; /* Transition for smooth hover effect */
            overflow: hidden; /* Prevent overflow of content */
        }

            .custom-card:hover {
                transform: scale(1.05); /* Zoom effect on hover */
                box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2); /* Shadow effect on hover */
            }

        .nav-link {
            position: relative;
            text-decoration: none; /* Remove default underline */
        }

            .nav-link::after {
                content: '';
                position: absolute;
                left: 0;
                right: 0;
                bottom: 0;
                height: 2px; /* Adjust height of the underline */
                background-color: #dc3545; /* Color of the underline */
                transform: scaleX(0);
                transition: transform 0.3s ease; /* Smooth transition */
            }

            .nav-link:hover::after,
            .nav-link.active::after {
                transform: scaleX(1); /* Show the underline on hover or if active */
            }
    </style>
</head>
<body>

    <nav class="navbar navbar-expand-lg bg-body-tertiary">
        <div class="container-fluid">
            <div class="navbar-brand">
                <img src="https://logo-suggestion.renderforest.com/suggestions-images/ff3c/bfed/ff3cbfedf2078c5cf80d628c7cb650c6.png" style="height:80px" alt="Logo">
            </div>
            <div class="collapse navbar-collapse" style="margin-left:5%">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="" onclick="setSearchQuery('')">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="setSearchQuery('top headlines')">Top Headlines</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="setSearchQuery('sports')">Sports</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="setSearchQuery('business')">Business</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="setSearchQuery('weather')">Weather</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="setSearchQuery('entertainment')">Entertainment</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="setSearchQuery('stock market')">Stock Market</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="setSearchQuery('crime')">Crime</a>
                    </li>
                </ul>

                <form class="d-flex" id="searchForm" style="text-align:right" role="search" autocomplete="off">
                    <select class="form-select me-2" id="sortSelect" aria-label="Filter">
                        <option value="publishedAt" selected>Latest</option>
                        <option value="popularity">Popularity</option>
                        <option value="relevancy">Searchable</option>
                    </select>
                    <select class="form-select me-2" id="languageSelect" aria-label="Select Language">
                        <option value="">All Languages</option>
                        <option value="en" selected class="flag-option">English</option>
                        <option value="de" class="flag-option">German</option>
                        <option value="es" class="flag-option">Spanish</option>
                        <option value="fr" class="flag-option">French</option>
                        <option value="hi" class="flag-option">Hindi</option>
                        <option value="it" class="flag-option">Italian</option>
                        <option value="ru" class="flag-option">Russian</option>
                        <option value="nl" class="flag-option">Dutch</option>
                        <option value="zh" class="flag-option">Chinese</option>
                        <option value="sv" class="flag-option">Swedish</option>
                        <option value="tr" class="flag-option">Turkish</option>
                        <option value="ar" class="flag-option">Arabic</option>
                    </select>
                    <input class="form-control me-2" type="search" id="searchInput" placeholder="Search" aria-label="Search">
                    <button class="btn btn-outline-success" type="submit">Search</button>
                </form>
            </div>
        </div>
    </nav>

    <div class="container">
        <h6 style="text-align:left" class="my-4">(<span id="resultcount"></span> Results)</h6>
        <div class="row content"></div>
        <div class="d-flex justify-content-between my-4">
            <div>
                <h6 class="form-label">Page Size</h6>
            </div>
            <div style="margin-right:68%">
                <select class="form-select me-2" id="pageSizeSelect" aria-label="Select Page Size">
                    <option value="5" selected>5</option>
                    <option value="10">10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                </select>
            </div>
            <div>
                <nav aria-label="Page navigation">
                    <ul class="pagination" id="pagination"></ul>
                </nav>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        let currentPage = 1;
        let pageSize = 5; // Default page size
        let searchQuery = 'Times of India'; // Default search query
        let language = ''; // Default language (all languages)
        let sortBy = 'publishedAt'; // Default sort option
        let totalResults = 0; // Total number of results
        let apikey = "6953ea382486420d83efb8ee4c629616"; //api key

        const FetchNews = async (page) => {
            console.log("fetching news...");

            // Get today's date
            const today = new Date();
            const toDate = new Date(today);
            toDate.setDate(today.getDate());
            const fromDate = new Date(toDate);
            fromDate.setDate(toDate.getDate() - 15);

            const formatDate = (date) => {
                return date.toISOString().split('T')[0]; // Convert to ISO format and extract the date part
            };

            const fromDateString = formatDate(fromDate);
            const toDateString = formatDate(toDate);

            const url = `https://newsapi.org/v2/everything?q=${encodeURIComponent(searchQuery)}&from=${(fromDateString)}&to=${(toDateString)}&pageSize=${pageSize}&language=${language}&page=${page}&sortBy=${sortBy}&apiKey=${apikey}`;
            let response = await fetch(url);
            let data = await response.json();
            console.log(data);

            totalResults = data.totalResults;
            document.getElementById("resultcount").innerHTML = totalResults;

            let str = "";
            for (let item of data.articles) {
                str += `
                            <div class="col-12 col-md-6 col-lg-4 mb-4">
                                <div class="card custom-card" style="height: 100%; display: flex; flex-direction: column;">
                                    <img src="${item.urlToImage}" class="card-img-top" alt="${item.title}" style="object-fit: cover; height: 200px;">
                                    <div class="card-body d-flex flex-grow-1 flex-column">
                                        <h5 class="card-title">${item.title}</h5>
                                        <p class="card-text" style="flex-grow: 1;">${(item.description)}</p>
                                        <a href="${item.url}" target="_blank" class="btn btn-success mt-auto">Read full article</a>
                                    </div>
                                </div>
                            </div>`;
            }
            document.querySelector(".content").innerHTML = str;

            // Generate pagination
            generatePagination();
        };

        const generatePagination = () => {
            const pagination = document.getElementById("pagination");
            pagination.innerHTML = ""; // Clear existing pagination

            const totalPages = Math.ceil(totalResults / pageSize);
            const maxPagesToShow = 5;
            let startPage, endPage;

            if (totalPages <= maxPagesToShow) {
                startPage = 1;
                endPage = totalPages;
            } else {
                if (currentPage <= Math.ceil(maxPagesToShow / 2)) {
                    startPage = 1;
                    endPage = maxPagesToShow;
                } else if (currentPage + Math.floor(maxPagesToShow / 2) >= totalPages) {
                    startPage = totalPages - maxPagesToShow + 1;
                    endPage = totalPages;
                } else {
                    startPage = currentPage - Math.floor(maxPagesToShow / 2);
                    endPage = currentPage + Math.floor(maxPagesToShow / 2);
                }
            }

            // Add previous button
            const prevLi = document.createElement("li");
            prevLi.className = `page-item ${currentPage === 1 ? 'disabled' : ''}`;
            prevLi.innerHTML = `<a class="page-link" href="#" onclick="goToPage(${currentPage - 1})">&lt;</a>`;
            pagination.appendChild(prevLi);

            // Add page number buttons
            for (let i = startPage; i <= endPage; i++) {
                const li = document.createElement("li");
                li.className = `page-item ${i === currentPage ? 'active' : ''}`;
                li.innerHTML = `<a class="page-link" href="#" onclick="goToPage(${i})">${i}</a>`;
                pagination.appendChild(li);
            }

            // Add next button
            const nextLi = document.createElement("li");
            nextLi.className = `page-item ${currentPage === totalPages ? 'disabled' : ''}`;
            nextLi.innerHTML = `<a class="page-link" href="#" onclick="goToPage(${currentPage + 1})">&gt;</a>`;
            pagination.appendChild(nextLi);
        };

        const goToPage = (page) => {
            if (page < 1 || page > Math.ceil(totalResults / pageSize)) return;
            currentPage = page;
            FetchNews(currentPage);
        };

        const setSearchQuery = (query) => {
            searchQuery = query; // Update search query
            document.getElementById("searchInput").value = query; // Update input value
            currentPage = 1; // Reset to first page

            // Update active tab
            document.querySelectorAll('.nav-link').forEach(link => {
                link.classList.remove('active');
            });
            document.querySelector(`a[onclick="setSearchQuery('${query}')"]`).classList.add('active');

            FetchNews(currentPage); // Fetch news with new query
        };

        document.getElementById("searchForm").onsubmit = (event) => {
            event.preventDefault(); // Prevent form submission
            searchQuery = document.getElementById("searchInput").value.trim() || 'india'; // Update search query
            language = document.getElementById("languageSelect").value; // Update selected language
            sortBy = document.getElementById("sortSelect").value; // Update selected sort option
            currentPage = 1; // Reset to first page
            FetchNews(currentPage); // Fetch news with new query and language
        };

        document.getElementById("pageSizeSelect").onchange = (event) => {
            pageSize = parseInt(event.target.value); // Update page size
            currentPage = 1; // Reset to first page
            FetchNews(currentPage); // Fetch news with new page size
        };

        // Initial fetch
        FetchNews(currentPage);
    </script>
</body>
</html>
